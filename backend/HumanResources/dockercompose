version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - action.destructive_requires_name=false
    ports:
      - "9200:9200"
    networks:
      - hr-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - hr-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.0
    container_name: logstash
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - hr-net

  hr-backend:
    build:
      context: .
    container_name: hr-backend
    ports:
      - "8080:8080"
    depends_on:
      logstash:
        condition: service_started
    networks:
      - hr-net
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      JWT_SECRET: mGoSCk0FVImtsnvBQgZ3itHX4dDGOxztVNOSdqYpHm4=
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: hr

networks:
  hr-net:
    driver: bridge



aşşağıdada Dockerfile komutları var

FROM openjdk:17-jdk-slim AS build

WORKDIR /app

COPY mvnw ./
COPY .mvn .mvn
COPY pom.xml ./
COPY src ./src

# Jar dosyasını üret
RUN ./mvnw clean package -DskipTests

FROM openjdk:17-jdk-slim

WORKDIR /app

COPY --from=build /app/target/*.jar ./app.jar

ENTRYPOINT ["java", "-jar", "app.jar"]
